 https://www.cnblogs.com/pyyu/articles/9314206.html

####  1 、Linux的终端中关机命令，有以下几个：

​		1、shutdown -h now(正常关机)
​		2、halt(关闭内存，非正常关机)
​		3、init 0(CentOS6中支持)

####  2、使用VMware备份操作系统

	在VM中备份方式有两种：快照、克隆
	快照：还原点，保存在拍快照时候的系统的状态（包含系统所有的内容），
		在后期的时候可以随时恢复，[侧重点在于短期备份，需要频繁备份的时候可以使用，做快照时虚拟的操作系统一般处于开机状态]
		
		步骤：1、创建快照（虚拟机->快照->拍摄快照[可以编辑快照命名进行注释]）
			  2、进行一系列不可逆的操作之后
			  3、恢复原来内容（虚拟机->快照->快照管理器）找到想要恢复的位置（点击转到）进行恢复即可
	
	克隆：复制。[侧重于长期备份，做克隆时操作系统必须是关机状态]
		步骤：1、关闭虚拟机
			  2、找到需要备份的虚拟机，右击鼠标，找到 [管理] ，找到 [克隆] 
			  3、下一步 ---->下一步----->选择[创建完整克隆]，点击下一步---->自定义克隆保存位置及命名--->点击完成
			  4、克隆好的账号密码与被克隆的一致

​			 

####  3、Linux系统的文件

​	什么是文件？
​		一般是一个独立的东西，可以通过一些特定的工具进行打开
​		
​	什么是文件夹？
​		1、可以在其中包含其他文件及文件夹
​		Linux系统一切皆文件

#### 4、基础指令

	1、ls指令（list）:文件/文件夹）
			ls 指令显示的文件和文件夹名称列表，蓝色的表示文件夹，黑色的表示文件，绿色为拥有所有权限（可执行）
			1、ls指令（list）:列出当前目录下的所有文件和文件夹名称，若不指定路径则表示当前路径
			2、ls 路径 ：列出指定目录下的所有文件和文件夹名称
			3、ls 选项 路径：列出指定路径下文件/文件夹的名称，并以指定的格式进行显示，
				常见的语法：
					ls -l bin ：-l,表示以详细列表的形式对bin文件夹进行展示
					ls -a bin ：-a,表示显示bin目录下所有的文件/文件夹（包含了隐藏文件/文件夹）
					ls -la bin : -la,表示以详细列表的形式对bin目录下所有文档进行展示（包含了隐藏
	其中以"-"开头的文档表示该行对应的文档类型为文件，以"d"开头的表示文档类型为文件夹
		4、ls -lh 路径 ：表示指定路径下所有文件/文件夹的名称，
						 以列表的形式并且在显示文档大小时以可读性较高的形式（带单位）出现，只表示文件夹的大小，并不计算文件里面内容
	
	2、pwd指令
		 pwd : （print working directory）打印当前工作目录(绝对路径)
	
	路径包括路径和文件名
	
	3、cd 命令
		cd 路径 ：用于切换当前工作目录
		补充：在Linux中有一个特殊的符号"~"，表示当前用户的家目录，切换方式: cd ~
		
	4、mkdir指令
		mkdir : (make directory,创建目录)
		1、mkdir 文件路径 ：在指定路径下创建文件夹 若在当前路径下直接写文件夹名
		
		2、mkdir -p 路径 ：一次性创建多层不存在的路径，实现多层嵌套路径的创建
		3、mkdir 路径1 路径2 ：一次性创建多个目录
		
	5、创建文件 touch指令
		touch : 创建文件
		touch 文件路径 ： 路径可以是直接的文件名也可以是路径（加上文件格式）
		touch 可以同时创建多个文件
	
	6、cp 指令
		1、cp :(copy ,复制) 复制文件到指定的位置
		
		   cp 被复制的文件路径 文件粘贴到的位置
		   
		2、cp -r : 复制文件夹到指定位置
		
		   cp -r 被复制的文件路径 文件粘贴到的位置 （-r表示递归复制）
		   
	7、mv 指令
		mv : (move) 移动、剪切 移动文档到指定位置
		
		1、mv 被剪切的文件路径 文件粘贴到的位置路径
		
		2、mv 文件名 新文件名 ： 文件重命名
		
		3、mv 被剪切的文件夹路径 文件夹粘贴到的位置路径
		
	8、rm命令
		rm :(remove) 删除文档
		语法：rm 选项 需要移除的文档路径
		选项：
			-f
			-r
		注意：在删除文档的时候如果不带选项直接删除，会提示是否删除，确认删除输入y或yes，
			否则输入n或no.
			如果在删除的时候不想频繁的确认，则可以在指令中添加选项 "-f" ,表示force(强制删除)
		
		删除一个文件：
			rm 文件路径    rm liu.txt
		删除一个文件夹：
			rm -r 文件夹路径   若想不提示是否删除 则 rm -rf 文件夹路径
		删除多个文档（包括文件、文件夹）
			rm -rf 文件夹路径1 文件夹路径1 
		删除一个文件夹下文档名有相同特性的文件 
			例如：命名前面含有 linux的文档
				rm -rf linux*
	
	9、vim命令
		vim 是一款文本编辑器
		语法 ：vim 文件的路径  
		作用： 打开一个文件（可以是不存在）
		退出打开的文件,在没有按其他键的情况下按：shift + :  ,然后输入 q 回车
		
		编辑： i
		
		退出编辑：
			按ESC键 跳到命令模式，然后：
			:w   保存文件但不退出vi
			:w file 将修改另外保存到file中，不退出vi
			:w!   强制保存，不推出vi
			:wq  保存文件并退出vi
			:wq! 强制保存文件，并退出vi
			q:  不保存文件，退出vi
			:q! 不保存文件，强制退出vi
			:e! 放弃所有修改，从上次保存文件开始再编辑
	
	10 输出重定向指令
		一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果想要保存到文件中
		进行后续的分析/统计，则这时候需要使用到输出重定向技术。
		> ： 表示覆盖输出，会覆盖掉原先的文件内容
		>> ：追加输出，不会覆盖原始文件的内容，会在原始内容末尾继续追加
		实例：
			使用覆盖重定向，保存 ls -la 的执行结果
				ls -la yujiao 在终端上展示yujiao文件夹下所有的文档名（包括隐藏文档）
				ls -la > ls.txt  上述显示的结果覆盖保存到 ls.txt 文件中 ls.txt 文件如果不存在则会新建一个ls.txt文件
				ls -la >> ls.txt 上述显示的结果添加保存到 ls.txt文件中
		
	11 cat 指令
		1、cat 有 直接 打开一个文件的功能		
		
		  语法：cat 文件路径
		  与vim打开文件的区别就是vim打开文件之后，在页面未退出之前，是在打开的文档内部，
		  而 cat 打开的文档只是在显示文档的内容之后回到终端页面
		
		2、cat可以对文件进行合并
			语法：cat 带合并的文件路径1 带合并的文件路径2 ...带合并的文件路径n > 合并之后的文件路径

#### 5、进阶指令

	1、df 指令
		作用：查看磁盘空间
		语法：1、df
			  2、df -h(带单位)
			  
	2、 free 指令
		作用：查看内存使用情况
		语法：free -m  表示以mb(兆)为单位查看
		Swap：用于临时内存。当系统真实内存不够用的时候可以临时使用磁盘空间来充当内存
		
	3、head 指令
		作用一个文件的前 n 行，如果不指定n，则默认显示前10行。
		语法：head -n 文件路径 (n为指定的数字)
	
	4、tail 指令
		作用1：查看一个文件的末 n 行，默认显示末10行
			语法： tail -n 文件路径 (n为指定的数字)
			
		作用2：可以通过tail指令来查看一个文件的动态变化
			打开两个终端，一个终端输入：tail -f 文件的路径 
			另一个终端往该文件进行修改或添加内容（可以作为重定向的接收文件），不能在文档中直接进行手动添加
			该命令一般用于查看系统日志


​	

```
5、less 指令
	作用:表示以较少的内容进行输出，按下辅助功能键（数字+回车，跳转到指定的行；空格键+上下方向键，上下翻页）查看更多
	语法：less 需要查看的文件路径
	
6、wc 指令
	作用：统计文件内容信息 ，包括行数 -l，单词数 -w，字节数 -c
	语法：wc 参数(-lwc) 文件路径  若想同时查询行数和单词数等，参数可以写在一块  wc -lwc ls.txt
	
7、date 指令（重点）
	作用：表示操作时间日期（读取、设置），shell
    语法1：date ,输出形式：2019年9月21日 星期六 14:20:20
    语法2：date +%F（等价于 date "+%Y-%m-%d"）,年月日 输出形式：2019-09-21
    语法：date +%T (等价于 date "%H:%M:%S"),完整的时分秒 输出形式为：15:26:20
    语法3：date "+%F%T" （等价于 date "+%Y-%m-%d %H:%M:%S"）,引号表示让"年月日时分秒"成为一个不可分割的整体
    输出形式为：2019-09-21 14:51:30
	语法4：获取之前或者之后的某个时间（备份）
		
        案例：获取一天之前的时间：
        1：date -d "-1 day" "+%Y-%m-%d %H:%M:%S"
        2：：date -d "-1 day" "+%F%T"
        获取一年之前的时间：只需要把上面两种方式中的day改成year,
        年月日时分秒方式一样
        而获取当前时间之后的日期只需要把负号去掉
```


​			


​	
​	8、cal 指令
​		作用：用来操作日历
​		语法：
​			1、cal  等价于 cal -1 直接输出当前月份的日历(-1表示当前月份)
​			2、cal -3  表示输出上一个月+本月+下一个月的日历
​			3、cal -y 2018 表示输出某一年的日历
​			
​	9、clear / ctrl + L 指令
​		作用：清除终端中已经存在的命令和结果（信息）
​		语法:clear 或者快捷键：ctrl键 + L键
​		需要注意的是该命令并不是真的清除了之前的信息，而是把之前的信息隐藏到了最上面，通过滚动条可以继续查看以前的信息
​		
	10、管道（重要）
		管道符号：|
		作用：管道一般可以用于"过滤","特殊","扩展处理",
		语法：管道不能单独使用，必须配合其他指令一起使用，其主要作用是辅助,
			以管道符作为界限，管道前面的输出就是后面指令的输入
		1、过滤案例：需要通过管道指定目录下包含"y"字母的文档名称
			ls /|grep y 表示根目录（/）下包含"y"字母的文档名称
		    grep指令：主要用于过滤
		2、特殊用法案例：通过管道的操作方法来实现less的等价效果（了解）
		
		3、扩展处理：
			例如：请使用学过的命令，来统计指定目录（/）下的文档的总个数	
				语法： ls /|wc -l
				
	 grep指令		
		例如：查找setting.py 中以 STA 开头的文件内容
		grep "STA*" setting.py


​		
		反向查找：查找setting.py 中除了以 STA 开头的文件内容, -n表示输出行号
			grep -v "STA*" setting.py -n
			
	11、alias 指令
			作用：设置别名
			#设置rm别名
			alias rm='echo do not use rm'
			#取消别名
			unalias rm
	
	12、wget 下载资源的命令


​		

#### 6、高级指令

```
1、hostname 指令
    作用：操作服务器的主机名（读取、设置）
    语法：
    1、hostname      表示输出完整的主机名
    2、hostname -f   表示输出当前主机名的FGDN（全限定域名）
```

​	

	2、id 指令
		作用：查看一个用户的一些基本信息（包含用户id,用户组id,附加组id...）,该指令如果不指定用户则默认当前用户
		语法：
			1、id            默认显示当前用户的信息
			2、id 用户名     显示指定用户的信息
	
	3、whoami 指令
		作用：显示当前登录的用户名,一般用于shell脚本，用于获取当前操作的用户名方便记录日志
		语法：whoami
	
	4、ps -ef (重点) **
		指令：ps
		作用：主要是查看服务器的进程信息
		选项含义:
			-e ：等价于"-A" ,表示列出全部的进程
			-f : 显示全部的列
		执行结果分析：
			UID：该进程执行的用户id;
			PID: 进程id;
			PPID: 该进程的父进程id;若某一进程的父级进程找不到，则该程序的进程为僵尸进程
			C：cpu的占用率，其形式是百分比；
			STIME：进程启动的时间；
			TTY：终端设备，发起该进程的设备识别符号，如果显示"?"则表示该进程并不是由终端设备发起；
			TIME：进程的执行时间；
			CMD：该进程的名称或者对应的路径；
		在ps的结果中过滤出想要查看的进程状态：ps -ef| grep 进程名称
			例如：ps -ef| grep gnome-panel
			 
	5、top 指令 **
		作用：查看服务器进程所占的资源
		语法：
			进入命令：top (动态显示，自动刷新)
			退出命令：按下q键
			结果分析：
				PID：进程id;
				USER:该进程对应的用户；
				PR:优先级；
				VIRT:虚拟内存；
				RES：常驻内存；
				SHR：共享内存
					如果一个进程申请了500M内存，实际用了300M，但其中还包含对其他进程的调用的内存开销（共享内存）则需要扣除
					则虚拟内存是500M，常驻内存是300M
					也即：一个进程实际使用的内存 = 常驻内存（RES） - 共享内存（SHR）
				**S：表示进程的状态(S,sleeping表示睡眠状态；R，Runing表示运行 )
				**%CPU：表示进程占用的CPU的百分比
				**%MEM：表示进程占用的内存的百分比
				TIME+：执行的时间
				**COMMAND：进程的名称或者路径
				
		在运行top时，可以按下方便的快捷键
			**M:表示将结果按照内存（MEM）从高到低进行降序排序
			**P:表示将结果按照CPU的使用率进行降序排序
			数字1:当用户拥有多个cpu的时候，可以使用数字1快捷键来切换是否展示各个cpu的详细信息
			
	6、du -sh 指令
		作用：查看目录的真实大小
		语法：du -sh 文档路径
		选项含义：
			-s:summaries,只显示汇总的大小
			-h:表示以较高可读性的形式进行显示（单位）
	
	7、find 指令
		作用：用于查找文件
		语法：find 路径范围 选项 选项的值
		选项：
			-name:按照文档名称进行搜索(支持模糊搜索)
			-type:按照文档类型进行搜索
				文档类型："-"表示文件（在使用find的时候需要用 f 来替换）,"d" 表示文件夹
		-name和-type可以同时使用
	
	8、service 指令 **
		作用：用于控制一些软件的服务启动/停止/重启,在超级用户root中运行
		语法：service 服务名 start/stop/restart
		
		例如：需要启动本机安装的Apache（网站服务器软件），其服务名为 httpd 
		可以通过ps -ef | grep httpd命令查看服务是否启动
	
	9、kill 指令 **
		作用：表示关闭进程（当遇到僵尸进程或者出于某些原因需要关闭进程的时候）
		语法：kell PID  ，PID进程ID（语法需要配合ps一起使用）
		
		语法：killall 进程名称 ，与上面作用类似
		kill -9  进程ID（PID）  强制杀死进程
	
	10、ifconfig 指令 **
		作用：用于操作网卡相关的指令
		简单语法：ifconfig  （获取网卡信息）
		inet addr 就是网卡的ip地址
		
	11、reboot 指令 **
		作用：重启计算机指令
		语法：reboot
		（了解）语法2：reboot -w  模拟重启，但是不重启（只写关机与开机的日志信息）
		
	12、shutdown 指令
		作用:关机  （慎用）
		语法：
			1、定时关机，now表示立即关机
				shutdown -h now "可添加关机提示信息" 或者 shutdown -h 15.25 "可添加关机提示信息" 
			取消关机：
				针对centos7.x之前的版本：ctrl键 + c键
				针对centos7.x（包含）之后的版本：输入：shutdown -c
		
	13、uptime 指令
		作用:输出计算机从开机到现在持续运行的时间
		
	14、uname 指令
		作用:获取计算机操作系统相关的信息
		语法：
			1、uname       获取操作系统的类型
			2、uname -a    表示获取全部的系统信息（类型，全部主机名，内核版本、发布计划，开源计划[GNU]
			
	15、netstat -tnlp 指令
		作用：查看网络的连接状态
		语法：
			1、netstat -tnlp
		结果分析：
			-t:表示只列出tcp协议的连接
			-n:表示将地址从字母组合转化为ip地址，将协议转化成端口号来显示
			-l:表示过滤出"State"列中值为LISTEN（监听）的连接
			-p:表示显示进程的PID和进程名称
	
	16、man 指令
		作用：manual,手册（包含了Linux中全部命令手册）
		语法：man 命令  (退出按下q键)
		举例：man cp (查看cp命令的用法)
		
	17、scp 指令
	
		#传输本地文件到远程地址
		scp 本地文件  远程用户名@远程ip:远程文件夹/
		scp 本地文件  远程用户名@远程ip:远程文件夹/远程文件名
	
		scp /tmp/chaoge.py root@192.168.1.155:/home/
		scp /tmp/chaoge.py root@192.168.1.155:/home/chaoge_python.py
	
		scp -r  本地文件夹  远程用户名@远程ip:远程文件夹/
		scp -r /tmp/oldboy root@192.168.1.155:/home/oldboy
	
		#复制远程文件到本地
		scp root@192.168.1.155:/home/oldboy.txt /tmp/oldboy.txt
		scp -r root@192.168.1.155:/home/oldboy /home/
#### 7、vim

##### 1、移动光标

```
用户刚刚启动 vi/vim，便进入了命令模式。

此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令
w(e)　　移动光标到下一个单词
b　　　　移动到光标上一个单词

数字0　　移动到本行开头
$　　　　移动光标到本行结尾

H　　　　移动光标到屏幕首行
M　　　　移动到光标到屏幕的中间一行
L　　　　移动光标到屏幕的尾行
gg　　　 移动光标到文档的首行
G　　　　移动光标到文档尾行

ctrl + f　　下一页
ctrl + b　　上一页

`.　　移动光标到上一次的修改行

```

##### 2、查找

```
/chaoge     在整篇文档中搜索chaoge字符串,向下查找
?chaoge     在整篇文档中搜索chaoge字符串,向上查找

*        查找整个文档，匹配光标所在的所有单词,按下n查找下一处,N上一处
#        查找整个文档，匹配光标所在的所有单词,按下n查找下一处,N上一处

gd        找到光标所在单词匹配的单词，并停留在非注释的第一个匹配上

%　　　　找到括号的另一半！！
```

##### 3、复制，删除，粘贴

```
yy    拷贝光标所在行
dd    删除光标所在行
D     删除当前光标到行尾的内容
dG    删除当前行到文档尾部的内容
p     粘贴yy所复制的内容x　　 删除光标所在的字符
u     撤销上一步的操作
```

##### 4、底线命令模式

```
:q!     强制退出
:wq!    强制写入退出
:set nu 显示行号
:数字　　调到数字那行

随时按下esc可以退出底线命令模式
```

##### 5、vim按键

```
移动光标的方法：
    h 或 向左箭头键(←)    光标向左移动一个字符
    j 或 向下箭头键(↓)    光标向下移动一个字符
    k 或 向上箭头键(↑)    光标向上移动一个字符
    l 或 向右箭头键(→)    光标向右移动一个字符向下移动5行　　　　　　5j向右移动10字符　　　　			10ln(space)　　　　按下数字n,例如10，然后按下空格，光标会向右移动10个字符

底线命令：
    :! command    暂时离开vim指令模式，执行command的结果
    例如  :!ip a    临时看一下ip信息，然后可以回到vim

    :set nu　　　　显示vim行号
    :set nonu　　　　取消行号


```

